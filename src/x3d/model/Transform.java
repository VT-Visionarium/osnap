//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB)
// Reference Implementation, v2.2.4
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source
// schema.
// Generated on: 2011.06.16 at 09:21:15 AM EDT
//


package x3d.model;


import javax.xml.bind.annotation.*;
import x3d.fields.SFRotation;
import x3d.fields.SFVec3f;


/**
 * <p>
 * Java class for anonymous complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;extension base="{}X3DGroupingNode">
 *       &lt;attribute name="center" type="{}SFVec3f" default="0 0 0" />
 *       &lt;attribute name="rotation" type="{}SFRotation" default="0 0 1 0" />
 *       &lt;attribute name="scale" type="{}SFVec3f" default="1 1 1" />
 *       &lt;attribute name="scaleOrientation" type="{}SFRotation" default="0 0 1 0" />
 *       &lt;attribute name="translation" type="{}SFVec3f" default="0 0 0" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
@XmlRootElement(name = "Transform")
public class Transform
        extends X3DGroupingNode {

    @XmlAttribute(name = "center")
    private SFVec3f    center;
    @XmlAttribute(name = "rotation")
    private SFRotation rotation;
    @XmlAttribute(name = "scale")
    private SFVec3f    scale;
    @XmlAttribute(name = "scaleOrientation")
    private SFRotation scaleOrientation;
    @XmlAttribute(name = "translation")
    private SFVec3f    translation;

    /**
     * Gets the value of the center property.
     * 
     * @return possible object is {@link SFVec3f }
     * 
     */
    public SFVec3f getCenter() {

        if (this.center == null) {
            this.center = new SFVec3f(0.0f, 0.0f, 0.0f);
        }
        return center;
    }

    /**
     * Sets the value of the center property.
     * 
     * @param value
     *            allowed object is {@link String }
     * 
     */
    public void setCenter(SFVec3f value) {

        this.center = value;
    }

    /**
     * Sets the center of this transform to the provided values.
     * 
     * @param xValue
     *            the x value.
     * @param yValue
     *            the y value.
     * @param zValue
     *            the z value.
     */
    public void setCenter(float xValue, float yValue, float zValue) {

        this.setCenter(new SFVec3f(xValue, yValue, zValue));
    }

    /**
     * Gets the value of the rotation property.
     * 
     * @return possible object is {@link SFRotation }
     * 
     */
    public SFRotation getRotation() {

        if (this.rotation == null) {
            this.rotation = new SFRotation(0.0f, 0.0f, 1.0f, 0.0f);
        }
        return rotation;
    }

    /**
     * Sets the value of the rotation property.
     * 
     * @param value
     *            allowed object is {@link SFRotation }
     * 
     */
    public void setRotation(SFRotation value) {

        this.rotation = value;
    }

    /**
     * Sets the value of the rotation property.
     * 
     * @param xValue
     *            the x component of the rotation axis.
     * @param yValue
     *            the y component of the rotation axis.
     * @param zValue
     *            the z component of the rotation axis.
     * @param angle
     *            the angle of rotation.
     */
    public void setRotation(float xValue, float yValue, float zValue,
            float angle) {

        this.setRotation(new SFRotation(xValue, yValue, zValue, angle));
    }

    /**
     * Gets the value of the scale property.
     * 
     * @return possible object is {@link SFVec3f }
     * 
     */
    public SFVec3f getScale() {

        if (this.scale == null) {
            this.scale = new SFVec3f(1.0f, 1.0f, 1.0f);
        }
        return scale;
    }

    /**
     * Sets the value of the scale property.
     * 
     * @param value
     *            allowed object is {@link SFVec3f }
     * 
     */
    public void setScale(SFVec3f value) {

        this.scale = value;
    }

    /**
     * Sets the value of the scale property.
     * 
     * @param scaleX
     *            scaling in X direction.
     * @param scaleY
     *            scaling in Y direction.
     * @param scaleZ
     *            scaling in Z direction.
     * 
     */
    public void setScale(float scaleX, float scaleY, float scaleZ) {

        this.setScale(new SFVec3f(scaleX, scaleY, scaleZ));
    }

    /**
     * Gets the value of the scaleOrientation property.
     * 
     * @return possible object is {@link SFRotation }
     * 
     */
    public SFRotation getScaleOrientation() {

        return scaleOrientation;
    }

    /**
     * Sets the value of the scaleOrientation property.
     * 
     * @param value
     *            allowed object is {@link SFRotation }
     * 
     */
    public void setScaleOrientation(SFRotation value) {

        if (this.scaleOrientation == null) {
            this.scaleOrientation = new SFRotation(0.0f, 0.0f, 1.0f, 0.0f);
        }
        this.scaleOrientation = value;
    }

    /**
     * Sets the value of the setScaleOrientation property.
     * 
     * @param xValue
     *            the x component of the scaleOrientation axis.
     * @param yValue
     *            the y component of the scaleOrientation axis.
     * @param zValue
     *            the z component of the scaleOrientation axis.
     * @param angle
     *            the angle of rotation.
     */
    public void setScaleOrientation(float xValue, float yValue, float zValue,
            float angle) {

        this.setScaleOrientation(new SFRotation(xValue, yValue, zValue, angle));
    }

    /**
     * Gets the value of the translation property.
     * 
     * @return possible object is {@link SFVec3f }
     * 
     */
    public SFVec3f getTranslation() {

        if (this.translation == null) {
            this.translation = new SFVec3f(0.0f, 0.0f, 0.0f);
        }
        return translation;
    }

    /**
     * Sets the value of the translation property.
     * 
     * @param value
     *            allowed object is {@link String }
     * 
     */
    public void setTranslation(SFVec3f value) {

        this.translation = value;
    }

    /**
     * Sets the value of the translation property.
     * 
     * 
     * @param translateX
     *            translation in X direction.
     * @param translateY
     *            translation in Y direction.
     * @param translateZ
     *            translation in Z direction.
     */
    public void setTranslation(float translateX, float translateY,
            float translateZ) {

        this.setTranslation(new SFVec3f(translateX, translateY, translateZ));
    }
}

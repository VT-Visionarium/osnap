//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB)
// Reference Implementation, v2.2.4
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source
// schema.
// Generated on: 2011.06.16 at 09:21:15 AM EDT
//


package org.x3d.model;

/*
 * _
 * The Open Semantic Network Analysis Platform (OSNAP)
 * _
 * Copyright (C) 2012 - 2014 Visionarium at Virginia Tech
 * _
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * _
 */


import java.util.LinkedList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlMixed;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

import org.jutility.io.xml.XmlCData;
import org.x3d.fields.MFString;
import org.x3d.fields.SFBool;


/**
 * <p>
 * Java class for anonymous complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;extension base="{}X3DScriptNode">
 *       &lt;attribute name="directOutput" type="{}SFBool" default="false" />
 *       &lt;attribute name="mustEvaluate" type="{}SFBool" default="false" />
 *       &lt;attribute name="url" type="{}MFString" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
@XmlRootElement(name = "Script")
public class Script
        extends X3DScriptNode {

    @XmlAttribute(name = "directOutput")
    private SFBool       directOutput;
    @XmlAttribute(name = "mustEvaluate")
    private SFBool       mustEvaluate;
    @XmlAttribute(name = "url")
    private MFString     url;



    @XmlMixed
    private List<Object> cdata;


    /**
     * Returns the CDATA of this {@link Script}.
     * 
     * @return the CDATA of this {@link Script}.
     */
    public String getCdata() {

        if (this.cdata.isEmpty() || !(this.cdata.get(0) instanceof String)) {

            return null;
        }

        String value = (String) this.cdata.get(0);

        if (XmlCData.isCDATA(value)) {

            return XmlCData.fromCDATA(value);
        }

        return value;
    }

    /**
     * Sets the CDATA of this {@link Script}.
     * 
     * @param cdata
     *            the CDATA of this {@link Script}.
     */
    public void setCdata(String cdata) {

        this.cdata.clear();

        String value = cdata;

        if (!XmlCData.isCDATA(cdata)) {

            value = XmlCData.toCDATA(cdata);
        }

        this.cdata.add(value);
    }


    /**
     * Gets the value of the directOutput property.
     * 
     * @return possible object is {@link SFBool }
     * 
     */
    public SFBool isDirectOutput() {

        if (directOutput == null) {

            directOutput = SFBool.FALSE;
        }
        return directOutput;

    }

    /**
     * Sets the value of the directOutput property.
     * 
     * @param value
     *            allowed object is {@link SFBool }
     * 
     */
    public void setDirectOutput(SFBool value) {

        this.directOutput = value;
    }

    /**
     * Gets the value of the mustEvaluate property.
     * 
     * @return possible object is {@link SFBool }
     * 
     */
    public SFBool isMustEvaluate() {

        if (mustEvaluate == null) {
            mustEvaluate = SFBool.FALSE;
        }
        return mustEvaluate;

    }

    /**
     * Sets the value of the mustEvaluate property.
     * 
     * @param value
     *            allowed object is {@link SFBool }
     * 
     */
    public void setMustEvaluate(SFBool value) {

        this.mustEvaluate = value;
    }

    /**
     * Gets the value of the url property.
     * 
     * <p>
     * This accessor method returns a reference to the live list, not a
     * snapshot. Therefore any modification you make to the returned list will
     * be present inside the JAXB object. This is why there is not a
     * <CODE>set</CODE> method for the url property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * 
     * <pre>
     * getUrl().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * 
     * @return Objects of the following type(scale) are allowed in the list
     *         {@link org.x3d.fields.SFString }
     * 
     * 
     */
    public MFString getUrl() {

        if (url == null) {
            
            url = new MFString();
        }
        return this.url;
    }


    /**
     * Creates a new instance of the {@link Script} class.
     */
    public Script() {

        this.cdata = new LinkedList<>();
    }
}

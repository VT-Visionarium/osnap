//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.06.16 at 09:21:15 AM EDT 
//
package org.x3d.model;

/*
 * _
 * The Open Semantic Network Analysis Platform (OSNAP)
 * _
 * Copyright (C) 2012 - 2014 Visionarium at Virginia Tech
 * _
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * _
 */

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

import org.x3d.fields.SFBool;
import org.x3d.fields.SFColor;
import org.x3d.fields.SFFloat;

/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;extension base="{}X3DMaterialNode">
 *       &lt;attribute name="ambientIntensity" default="0.2">
 *         &lt;simpleType>
 *           &lt;restriction base="{}SFFloat">
 *             &lt;minInclusive value="0"/>
 *             &lt;maxInclusive value="1"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="backAmbientIntensity" default="0.2">
 *         &lt;simpleType>
 *           &lt;restriction base="{}SFFloat">
 *             &lt;minInclusive value="0"/>
 *             &lt;maxInclusive value="1"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="diffuseColor" type="{}SFColor" default="0.8 0.8 0.8" />
 *       &lt;attribute name="backDiffuseColor" type="{}SFColor" default="0.8 0.8 0.8" />
 *       &lt;attribute name="emissiveColor" type="{}SFColor" default="0 0 0" />
 *       &lt;attribute name="backEmissiveColor" type="{}SFColor" default="0 0 0" />
 *       &lt;attribute name="shininess" default="0.2">
 *         &lt;simpleType>
 *           &lt;restriction base="{}SFFloat">
 *             &lt;minInclusive value="0"/>
 *             &lt;maxInclusive value="1"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="backShininess" default="0.2">
 *         &lt;simpleType>
 *           &lt;restriction base="{}SFFloat">
 *             &lt;minInclusive value="0"/>
 *             &lt;maxInclusive value="1"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="specularColor" type="{}SFColor" default="0 0 0" />
 *       &lt;attribute name="backSpecularColor" type="{}SFColor" default="0 0 0" />
 *       &lt;attribute name="transparency" default="0">
 *         &lt;simpleType>
 *           &lt;restriction base="{}SFFloat">
 *             &lt;minInclusive value="0"/>
 *             &lt;maxInclusive value="1"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="backTransparency" default="0">
 *         &lt;simpleType>
 *           &lt;restriction base="{}SFFloat">
 *             &lt;minInclusive value="0"/>
 *             &lt;maxInclusive value="1"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="separateBackColor" type="{}SFBool" default="false" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
@XmlRootElement(name = "TwoSidedMaterial")
public class TwoSidedMaterial
        extends X3DMaterialNode {

    @XmlAttribute(name = "ambientIntensity")
    protected SFFloat ambientIntensity;
    @XmlAttribute(name = "backAmbientIntensity")
    protected SFFloat backAmbientIntensity;
    @XmlAttribute(name = "diffuseColor")
    protected SFColor diffuseColor;
    @XmlAttribute(name = "backDiffuseColor")
    protected SFColor backDiffuseColor;
    @XmlAttribute(name = "emissiveColor")
    protected SFColor emissiveColor;
    @XmlAttribute(name = "backEmissiveColor")
    protected SFColor backEmissiveColor;
    @XmlAttribute(name = "shininess")
    protected SFFloat shininess;
    @XmlAttribute(name = "backShininess")
    protected SFFloat backShininess;
    @XmlAttribute(name = "specularColor")
    protected SFColor specularColor;
    @XmlAttribute(name = "backSpecularColor")
    protected SFColor backSpecularColor;
    @XmlAttribute(name = "transparency")
    protected SFFloat transparency;
    @XmlAttribute(name = "backTransparency")
    protected SFFloat backTransparency;
    @XmlAttribute(name = "separateBackColor")
    protected SFBool separateBackColor;

    /**
     * Gets the value of the ambientIntensity property.
     * 
     * @return
     *     possible object is
     *     {@link SFFloat }
     *     
     */
    public SFFloat getAmbientIntensity() {
        return ambientIntensity;
    }

    /**
     * Sets the value of the ambientIntensity property.
     * 
     * @param value
     *     allowed object is
     *     {@link SFFloat }
     *     
     */
    public void setAmbientIntensity(SFFloat value) {
        this.ambientIntensity = value;
    }

    /**
     * Gets the value of the backAmbientIntensity property.
     * 
     * @return
     *     possible object is
     *     {@link SFFloat }
     *     
     */
    public SFFloat getBackAmbientIntensity() {
        return backAmbientIntensity;
    }

    /**
     * Sets the value of the backAmbientIntensity property.
     * 
     * @param value
     *     allowed object is
     *     {@link SFFloat }
     *     
     */
    public void setBackAmbientIntensity(SFFloat value) {
        this.backAmbientIntensity = value;
    }

    /**
     * Gets the value of the diffuseColor property.
     * 
     * @return
     *     possible object is
     *     {@link SFColor }
     *     
     */
    public SFColor getDiffuseColor() {
        return diffuseColor;
    }

    /**
     * Sets the value of the diffuseColor property.
     * 
     * @param value
     *     allowed object is
     *     {@link SFColor }
     *     
     */
    public void setDiffuseColor(SFColor value) {
        this.diffuseColor = value;
    }

    /**
     * Gets the value of the backDiffuseColor property.
     * 
     * @return
     *     possible object is
     *     {@link SFColor }
     *     
     */
    public SFColor getBackDiffuseColor() {
        return backDiffuseColor;
    }

    /**
     * Sets the value of the backDiffuseColor property.
     * 
     * @param value
     *     allowed object is
     *     {@link SFColor }
     *     
     */
    public void setBackDiffuseColor(SFColor value) {
        this.backDiffuseColor = value;
    }

    /**
     * Gets the value of the emissiveColor property.
     * 
     * @return
     *     possible object is
     *     {@link SFColor }
     *     
     */
    public SFColor getEmissiveColor() {
        return emissiveColor;
    }

    /**
     * Sets the value of the emissiveColor property.
     * 
     * @param value
     *     allowed object is
     *     {@link SFColor }
     *     
     */
    public void setEmissiveColor(SFColor value) {
        this.emissiveColor = value;
    }

    /**
     * Gets the value of the backEmissiveColor property.
     * 
     * @return
     *     possible object is
     *     {@link SFColor }
     *     
     */
    public SFColor getBackEmissiveColor() {
        return backEmissiveColor;
    }

    /**
     * Sets the value of the backEmissiveColor property.
     * 
     * @param value
     *     allowed object is
     *     {@link SFColor }
     *     
     */
    public void setBackEmissiveColor(SFColor value) {
        this.backEmissiveColor = value;
    }

    /**
     * Gets the value of the shininess property.
     * 
     * @return
     *     possible object is
     *     {@link SFFloat }
     *     
     */
    public SFFloat getShininess() {
        return shininess;
    }

    /**
     * Sets the value of the shininess property.
     * 
     * @param value
     *     allowed object is
     *     {@link SFFloat }
     *     
     */
    public void setShininess(SFFloat value) {
        this.shininess = value;
    }

    /**
     * Gets the value of the backShininess property.
     * 
     * @return
     *     possible object is
     *     {@link SFFloat }
     *     
     */
    public SFFloat getBackShininess() {
        return backShininess;
    }

    /**
     * Sets the value of the backShininess property.
     * 
     * @param value
     *     allowed object is
     *     {@link SFFloat }
     *     
     */
    public void setBackShininess(SFFloat value) {
        this.backShininess = value;
    }

    /**
     * Gets the value of the specularColor property.
     * 
     * @return
     *     possible object is
     *     {@link SFColor }
     *     
     */
    public SFColor getSpecularColor() {
        return specularColor;
    }

    /**
     * Sets the value of the specularColor property.
     * 
     * @param value
     *     allowed object is
     *     {@link SFColor }
     *     
     */
    public void setSpecularColor(SFColor value) {
        this.specularColor = value;
    }

    /**
     * Gets the value of the backSpecularColor property.
     * 
     * @return
     *     possible object is
     *     {@link SFColor }
     *     
     */
    public SFColor getBackSpecularColor() {
        return backSpecularColor;
    }

    /**
     * Sets the value of the backSpecularColor property.
     * 
     * @param value
     *     allowed object is
     *     {@link SFColor }
     *     
     */
    public void setBackSpecularColor(SFColor value) {
        this.backSpecularColor = value;
    }

    /**
     * Gets the value of the transparency property.
     * 
     * @return
     *     possible object is
     *     {@link SFFloat }
     *     
     */
    public SFFloat getTransparency() {
        return transparency;
    }

    /**
     * Sets the value of the transparency property.
     * 
     * @param value
     *     allowed object is
     *     {@link SFFloat }
     *     
     */
    public void setTransparency(SFFloat value) {
        this.transparency = value;
    }

    /**
     * Gets the value of the backTransparency property.
     * 
     * @return
     *     possible object is
     *     {@link SFFloat }
     *     
     */
    public SFFloat getBackTransparency() {
        return backTransparency;
    }

    /**
     * Sets the value of the backTransparency property.
     * 
     * @param value
     *     allowed object is
     *     {@link SFFloat }
     *     
     */
    public void setBackTransparency(SFFloat value) {
        this.backTransparency = value;
    }

    /**
     * Gets the value of the separateBackColor property.
     * 
     * @return
     *     possible object is
     *     {@link SFBool }
     *     
     */
    public SFBool isSeparateBackColor() {
        return separateBackColor;
    }

    /**
     * Sets the value of the separateBackColor property.
     * 
     * @param value
     *     allowed object is
     *     {@link SFBool }
     *     
     */
    public void setSeparateBackColor(SFBool value) {
        this.separateBackColor = value;
    }
}

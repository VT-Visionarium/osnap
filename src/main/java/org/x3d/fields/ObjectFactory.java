//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB)
// Reference Implementation, v2.2.4
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source
// schema.
// Generated on: 2011.06.16 at 09:21:15 AM EDT
//


package org.x3d.fields;

/*
 * _
 * The Open Semantic Network Analysis Platform (OSNAP)
 * _
 * Copyright (C) 2012 - 2014 Visionarium at Virginia Tech
 * _
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * _
 */


import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each Java content interface and Java
 * element interface generated in the org.x3d.model package.
 * <p>
 * An ObjectFactory allows you to programatically construct new instances of the
 * Java representation for XML content. The Java representation of XML content
 * can consist of schema derived interfaces and classes representing the binding
 * of schema type definitions, element declarations and model groups. Factory
 * methods for each of these are provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of
     * schema derived classes for package: org.x3d.model
     * 
     */
    public ObjectFactory() {

    }


    public SFBool createSFBool() {

        return new SFBool();
    }

    public SFColor createSFColor() {

        return new SFColor();
    }

    public SFColorRGBA createSFColorRGBA() {

        return new SFColorRGBA();
    }

    public SFDouble createSFDouble() {

        return new SFDouble();
    }

    public SFFloat createSFFloat() {

        return new SFFloat();
    }

    public SFImage createSFImage() {

        return new SFImage();
    }

    public SFInt32 createSFInt32() {

        return new SFInt32();
    }

    public SFMatrix3d createSFMatrix3d() {

        return new SFMatrix3d();
    }

    public SFMatrix3f createSFMatrix3f() {

        return new SFMatrix3f();
    }

    public SFMatrix4d createSFMatrix4d() {

        return new SFMatrix4d();
    }

    public SFMatrix4f createSFMatrix4f() {

        return new SFMatrix4f();
    }

    public SFRotation createSFRotation() {

        return new SFRotation();
    }

    public SFString createSFString() {

        return new SFString();
    }

    public SFTime createSFTime() {

        return new SFTime();
    }

    public SFVec2d createSFVec2d() {

        return new SFVec2d();
    }

    public SFVec2f createSFVec2f() {

        return new SFVec2f();
    }

    public SFVec3d createSFVec3d() {

        return new SFVec3d();
    }

    public SFVec3f createSFVec3f() {

        return new SFVec3f();
    }

    public SFVec4d createSFVec4d() {

        return new SFVec4d();
    }

    public SFVec4f createSFVec4f() {

        return new SFVec4f();
    }


    public MFBool createMFBool() {

        return new MFBool();
    }

    public MFColor createMFColor() {

        return new MFColor();
    }

    public MFColorRGBA createMFColorRGBA() {

        return new MFColorRGBA();
    }

    public MFDouble createMFDouble() {

        return new MFDouble();
    }

    public MFFloat createMFFloat() {

        return new MFFloat();
    }

    public MFImage createMFImage() {

        return new MFImage();
    }

    public MFInt32 createMFInt32() {

        return new MFInt32();
    }

    public MFMatrix3d createMFMatrix3d() {

        return new MFMatrix3d();
    }

    public MFMatrix3f createMFMatrix3f() {

        return new MFMatrix3f();
    }

    public MFMatrix4d createMFMatrix4d() {

        return new MFMatrix4d();
    }

    public MFMatrix4f createMFMatrix4f() {

        return new MFMatrix4f();
    }

    public MFRotation createMFRotation() {

        return new MFRotation();
    }

    public MFString createMFString() {

        return new MFString();
    }

    public MFTime createMFTime() {

        return new MFTime();
    }

    public MFVec2d createMFVec2d() {

        return new MFVec2d();
    }

    public MFVec2f createMFVec2f() {

        return new MFVec2f();
    }

    public MFVec3d createMFVec3d() {

        return new MFVec3d();
    }

    public MFVec3f createMFVec3f() {

        return new MFVec3f();
    }

    public MFVec4d createMFVec4d() {

        return new MFVec4d();
    }

    public MFVec4f createMFVec4f() {

        return new MFVec4f();
    }

}

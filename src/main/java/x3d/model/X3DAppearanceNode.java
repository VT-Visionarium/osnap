//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.06.16 at 09:21:15 AM EDT 
//


package x3d.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for X3DAppearanceNode complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="X3DAppearanceNode">
 *   &lt;complexContent>
 *     &lt;extension base="{}X3DNode">
 *       &lt;group ref="{}AppearanceChildContentModel" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;attribute name="containerField" type="{http://www.w3.org/2001/XMLSchema}NMTOKEN" default="appearance" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "X3DAppearanceNode", propOrder = {
    "material",
    "fillProperties",
    "lineProperties"
//  "texture",
//  "textureTransform",
//  "shader",
//  "protoInstance"
})
@XmlSeeAlso({
    Appearance.class
})
public class X3DAppearanceNode
    extends X3DNode
{

    @XmlElements({
        @XmlElement(name = "Material", type = Material.class),
        @XmlElement(name = "TwoSidedMaterial", type = TwoSidedMaterial.class)
    })
    protected X3DMaterialNode material;

    @XmlElement(name = "FillProperties")
    protected FillProperties fillProperties;

    @XmlElement(name = "LineProperties")
    protected LineProperties lineProperties;

    /*
     * @XmlElements({
     *    @XmlElement(name = "ComposedCubeMapTexture", type = ComposedCubeMapTexture.class),
     *    @XmlElement(name = "ComposedTexture3D", type = ComposedTexture3D.class),
     *    @XmlElement(name = "ImageTexture", type = ImageTexture.class),
     *    @XmlElement(name = "ImageTexture3D", type = ImageTexture3D.class),
     *    @XmlElement(name = "MovieTexture", type = MovieTexture.class),
     *    @XmlElement(name = "MultiTexture", type = MultiTexture.class),
     *    @XmlElement(name = "PixelTexture", type = PixelTexture.class),
     *    @XmlElement(name = "PixelTexture3D", type = PixelTexture3D.class),
     *    @XmlElement(name = "GeneratedCubeMapTexture", type = GeneratedCubeMapTexture.class),
     *    @XmlElement(name = "ImageCubeMapTexture", type = ImageCubeMapTexture.class)
     * })
     * protected X3DTextureNode texture;
     */

    /*
     * @XmlElements({
     *    @XmlElement(name = "ComposedShader", type = ComposedShader.class),
     *    @XmlElement(name = "PackagedShader", type = PackagedShader.class),
     *    @XmlElement(name = "ProgramShader", type = ProgramShader.class)
     * })
     * protected X3DShaderNode shader;
     */

    /*
     * @XmlElements({
     *    @XmlElement(name = "MultiTextureTransform", type = MultiTextureTransform.class),
     *    @XmlElement(name = "TextureTransform", type = TextureTransform.class)
     * })
     * protected X3DTextureTransformNode textureTransform;
     */


    /*
     * @XmlElement(name = "ProtoInstance", type = ProtoInstance.class)
     * protected ProtoInstance protoInstance;
     */
    
    @XmlAttribute(name = "containerField")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NMTOKEN")
    protected String containerField;



    /**
     * Gets the value of the material property.
     *
     * @return
     *     possible object is
     *     {@link X3DMaterialNode }
     *
     */
    public X3DMaterialNode getMaterial() {
        if (material == null) {
            material = new Material ();
        }
        return material;
    }
    /**
     * Sets the value of the material property.
     *
     * @param material
     *     allowed object is
     *     {@link X3DMaterialNode }
     *
     */
    public void setMaterial(X3DMaterialNode material) {
        this.material = material;
    }

    /*
     * public X3DTextureNode getTexture() {
     *     return texture;
     * }
     *
     * public void setTexture(X3DTextureNode texture) {
     *     this.texture = texture;
     * }
     *
     *
     * public X3DTextureTransformNode getTextureTransform() {
     *     return textureTransform;
     * }
     *
     * public void setTextureTransform(X3DTextureTransformNode textureTransform) {
     *     this.textureTransform = textureTransform;
     * }
     */


    /**
     * Gets the value of the fillProperties property.
     *
     * @return
     *     possible object is
     *     {@link FillProperties }
     *
     */
    public FillProperties getFillProperties() {
        if (fillProperties == null) {
            fillProperties = new FillProperties();
        }
        return fillProperties;
    }
    /**
     * Sets the value of the fillProperties property.
     *
     * @param fillProperties
     *     allowed object is
     *     {@link FillProperties }
     *
     */
    public void setFillProperties(FillProperties fillProperties) {
        this.fillProperties = fillProperties;
    }

    /**
     * Gets the value of the lineProperties property.
     *
     * @return
     *     possible object is
     *     {@link LineProperties }
     *
     */
    public LineProperties getLineProperties() {
        if (lineProperties == null) {
            lineProperties = new LineProperties();
        }
        return lineProperties;
    }
    /**
     * Sets the value of the lineProperties property.
     *
     * @param lineProperties
     *     allowed object is
     *     {@link LineProperties }
     *
     */
    public void setLineProperties(LineProperties lineProperties) {
        this.lineProperties = lineProperties;
    }

    /*
     * public X3DShaderNode getShader () {
     *     return shader;
     * }
     *
     * public void setShader (X3DShaderNode shader){
     *     this.shader = shader;
     *
     */


    /**
     * Gets the value of the containerField property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getContainerField() {
        if (containerField == null) {
            return "appearance";
        } else {
            return containerField;
        }
    }

    /**
     * Sets the value of the containerField property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setContainerField(String value) {
        this.containerField = value;
    }

}
